os: linux
dist: trusty
language: cpp
notifications:
  email: false

matrix:
  include:
    - env: >
        C_COMPILER=clang-5.0 CXX_COMPILER=clang++-5.0 BUILD_TYPE=Debug
        PRECISION="-DAS_PRECISION_FLOAT=ON"
        ORDER="-DAS_COL_MAJOR=ON"
      addons: &clang50
        apt:
          packages:
            - clang-5.0
            - g++-7
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main'
              key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'

    - env: >
        C_COMPILER=clang-5.0 CXX_COMPILER=clang++-5.0 BUILD_TYPE=Release
        PRECISION="-DAS_PRECISION_FLOAT=ON"
        ORDER="-DAS_COL_MAJOR=ON"
      addons: *clang50

    - env: >
        C_COMPILER=clang-5.0 CXX_COMPILER=clang++-5.0 BUILD_TYPE=Debug
        PRECISION="-DAS_PRECISION_FLOAT=ON"
        ORDER="-DAS_ROW_MAJOR=ON"
      addons: *clang50

    - env: >
        C_COMPILER=clang-5.0 CXX_COMPILER=clang++-5.0 BUILD_TYPE=Release
        PRECISION=-DAS_PRECISION_DOUBLE=ON
        ORDER="-DAS_ROW_MAJOR=ON"
      addons: *clang50

    - env: >
        C_COMPILER=gcc-7 CXX_COMPILER=g++-7 BUILD_TYPE=Debug
        PRECISION="-DAS_PRECISION_FLOAT=ON"
        ORDER="-DAS_COL_MAJOR=ON"
        COVERAGE="-DAS_COVERAGE=ON"
      addons: &gcc7
        apt:
          packages:
            - g++-7
            - lcov
          sources:
            - ubuntu-toolchain-r-test

    - env: >
        C_COMPILER=gcc-7 CXX_COMPILER=g++-7 BUILD_TYPE=Release
        PRECISION="-DAS_PRECISION_FLOAT=ON"
        ORDER="-DAS_COL_MAJOR=ON"
        COVERAGE="-DAS_COVERAGE=ON"
      addons: *gcc7

    - env: >
        C_COMPILER=gcc-7 CXX_COMPILER=g++-7 BUILD_TYPE=Debug
        PRECISION="-DAS_PRECISION_FLOAT=ON"
        ORDER="-DAS_ROW_MAJOR=ON"
        COVERAGE="-DAS_COVERAGE=ON"
      addons: *gcc7

    - env: >
        C_COMPILER=gcc-7 CXX_COMPILER=g++-7 BUILD_TYPE=Release
        PRECISION=-DAS_PRECISION_DOUBLE=ON
        ORDER="-DAS_COL_MAJOR=ON"
        COVERAGE="-DAS_COVERAGE=ON"
      addons: *gcc7

install:
  - export CC=${C_COMPILER}
  - export CXX=${CXX_COMPILER}
  - ${CXX} --version

  # travis machines have 2 cores
  - JOBS=2

  # install coveralls
  - gem install coveralls-lcov

  # install more up to date cmake
  # ref: https://riptutorial.com/cmake/example/4723/configure-travis-ci-with-newest-cmake
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
  - travis_retry wget https://github.com/Kitware/CMake/releases/download/v3.16.6/cmake-3.16.6-Linux-x86_64.tar.gz
  - tar -xvf cmake-3.14.5-Linux-x86_64.tar.gz > /dev/null
  - mv cmake-3.14.5-Linux-x86_64 cmake-install
  - PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH
  - cd ${TRAVIS_BUILD_DIR}

before_script:
  - tools/install-catch2.sh
  - tools/install-gsl.sh
  - tools/install-as.sh
  - cd tests/test
  - >
    cmake -S . -B build -DDEV_LIB_DIR=../ -DCATCH_CONFIG_DISABLE_EXCEPTIONS=1
    -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
    -DCMAKE_PREFIX_PATH=$(pwd)/build/as_install/\;$(pwd)/build/catch2_install/\;$(pwd)/build/gsl_install/
    ${PRECISION} ${ORDER} ${COVERAGE}

script:
  - cmake --build build -j${JOBS} -v
  - ./build/as-test

after_success:
  # create lcov report
  - |
    if [ $BUILD_TYPE == "Debug" ] && [ $CXX_COMPILER == "g++-7" ]; then
      lcov --capture --directory build --output-file coverage.info --gcov-tool=gcov-7
      lcov --remove coverage.info '*/gsl_install/*' '*/catch2/*' '*/7.4.0/*' '*/usr/include/*' '*/tests/test/*.test.cpp' '*/tests/test/catch-*' --output-file coverage.info --gcov-tool=gcov-7 # filter external files
      lcov --list coverage.info --gcov-tool=gcov-7 # debug info
      # codecov
      bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports" # uploading report to codecov
      # coveralls
      coveralls-lcov coverage.info
    fi
